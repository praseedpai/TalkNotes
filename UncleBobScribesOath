Scribe's Oath

https://www.youtube.com/watch?v=Tng6Fox8EfI

Asking a Volunteer to stretch his both hands to respective sides
	-Outstretched hands on both sides depict life on universe
	-Dinosars appeared, Disappreard on the left finger tip
	-Life on sea appeared on the right wrist and extended upto left wrist
	-Nothing happened in between

Read and Write
	- A Skill that was unnecessary for  a long time
        - Scribe's had literacy unlike most people in those times
        - Laws has to be written down precisely when kings dictate it!
        - When someone broke the law, Scribe's has to read out the law
        - Scribe's were a set of professionals who could do
		 - Read , Write, Arithematic, Calculations
                 - Distinguish between legal and ordinary language
        - Scribe's were the "lubricant" of the societies
        - They were considered "elite" with special social status 
        - Scribe's could not be induced to military, do not tax them
          They were the administrators, manager and their own internal culture
          They were disciplined, orderly and professionals
        - How scribe's transcribed Torah bible
		- A Lengthy segment on this 
                - if document has got more than three errors document will be archived
                - Dead sea Scrolls

Programmers in 
           - 1946 ( 1 Alan turing )
           - 1960 ( few 100s )
           = ACE (Adaptive Computing Engine ) 
           - Programmers double every five years ( Always a young industry )
           - 1970 started the first computer science 

Jurrasic Park
           - First time, a programmer became a villian 
           - Till then, programmers were shown as anciliary (computers were important )
           - By then, programmers became everything ( Remember movie Matrix )
           - By 2015, Programmers became heroes
           - In 2015 , programmers became political scapegoat ( as per CEO of Volkswagen)

Software developers 
           - do have a special literacy
           - We could do lot, where no software was involved
           - Nothing can be done, without software in our society

Software developers rule the world
           - People who rule the world, hand over the coding of rules to us
           - A mistake from programmer can kill people in 1000s
           - An accident will trigger a reaction from "politicians"
           - This can make software a deeply regulated industry

We require self policing
           - Otherwise, politicians will police us through legislation
           - Taking cue from Doctors , Accountants ( CA) , Building Architects and Lawyers

A Programmer's Oath ( Or Coders "Code" )
           - I  will not produce harmful code
                 - A Defect harms stakeholders and users
                 - A Programmer can do harm, if he destroys the structure of the code
                 - A Software is supposed to change easily, a defect violates the very existence
	  - Code that I produce will always be my best work
                 - Will be coherent in structure and behavior (code wise)
          - I will provide with each release , provide proof , that every element of the code
                  works as supposed to
                      - A Quick, Sure and repeatable proof
                      - Trying to achieve perfection is not bad 
          - I will make frequent small releases, and won't impede progress 
                      - Checkout the code for long time, is impeding progress
                      - Check in the code frequently
          - I will fearlessly and relentlessly improve the code every opportunity available 
                     - Do not allow bad code to stay put (even writen by others )
                     - Run tests (proofs) on code to avoid fear of screwing it up
          - I will keep produc tivity (my own and my team's ) high 
                     - I will not damage productivity
                     - Will not make code worse
          - I will continuously ensure, others can cover for me and I can cover for them
                     - Somebody else should know your work, you should know some people;s work
                     - Pair programming might help here
          - I will produce estimates that are honest,both magnitude and precision
                     - I will not make promises without certainity
                     - Always place bound on the estimates
                              - Best, Average, Worst case
                     - Neber Say Yes, In case of the No
          - I will never stop learning and improving my craft
                     - We mostly learn the old stuff in new way
                     - Keep learning 
